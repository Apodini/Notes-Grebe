//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: notes.proto
//

import Combine
import GRPC
import Grebe_Framework

extension NotesServiceServiceClient: GRPCClientInitializable {

  public func createNote(request: CreateNoteRequest, callOptions: CallOptions? = nil) -> AnyPublisher<CreateNoteResponse, GRPCStatus> {
    return GUnaryCall(request: request, callOptions: callOptions ?? defaultCallOptions, closure: createNote).execute()
  }

  public func deleteNotes(request: AnyPublisher<DeleteNotesRequest,Error> , callOptions: CallOptions? = nil) -> AnyPublisher<DeleteNotesResponse, GRPCStatus> {
    return GClientStreamingCall(request: request, callOptions: callOptions ?? defaultCallOptions, closure: deleteNotes).execute()
  }

  public func getNotes(request: GetNotesRequest, callOptions: CallOptions? = nil) -> AnyPublisher<GetNotesResponse, GRPCStatus> {
    return GServerStreamingCall(request: request, callOptions: callOptions ?? defaultCallOptions, closure: getNotes).execute()
  }

  public func switchTitleContent(request: AnyPublisher<SwitchTitleContentRequest,Error> , callOptions: CallOptions? = nil) -> AnyPublisher<SwitchTitleContentResponse, GRPCStatus> {
    return GBidirectionalStreamingCall(requests: request, callOptions: callOptions ?? defaultCallOptions, closure: switchTitleContent).execute()
  }
}
